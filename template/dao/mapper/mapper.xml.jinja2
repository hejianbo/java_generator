<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="{{ names['mapper_package_name'] }}.{{ names['mapper_name'] }}">
  <resultMap id="BaseResultMap" type="{{ names['entity_package_name'] }}.{{ names['entity_name'] }}">{% for column in columns%}{% if column['is_primary'] %}
    <id column="{{ column['column'] }}" jdbcType="{{ column['jdbc_type'] }}" property="{{ column['property'] }}" />{% else %}
    <result column="{{ column['column'] }}" jdbcType="{{ column['jdbc_type'] }}" property="{{ column['property'] }}" />{% endif %}{% endfor %}
  </resultMap>

  <sql id="BaseTableName">
    `{{ names['table_name'] }}` as base
  </sql>
  <sql id="TableName">
    `{{ names['table_name'] }}`
  </sql>

  <sql id="BaseColumns">
    {%for column in columns%}{%if loop.index != 1 %}, {% endif %}base.`{{ column['column'] }}`{% endfor %}
  </sql>

  <insert id="insert" parameterType="{{ names['entity_package_name'] }}.{{ names['entity_name'] }}">
    insert into <include refid="TableName" />
     <trim prefix="(" suffix=")" suffixOverrides="," >
        {%for column in columns%}<if test="{{ column['property'] }} != null">{{column['column']}},</if>
        {%endfor%}
     </trim>
     <trim prefix="values(" suffix=")" suffixOverrides="," >
        {%for column in columns%}<if test="{{ column['property'] }} != null">#{ {{column['property']}}, jdbcType={{column['jdbc_type']}} },</if>
        {%endfor%}
     </trim>
  </insert>

  <insert id = "batchInsert">
    insert into <include refid="TableName" /> (
        {%for column in columns  if column['column'] not in ('id', 'create_time', 'update_time', 'is_deleted') %}{%if loop.index != 1 %}, {% endif %}`{{ column['column'] }}`{% endfor %}
    ) values
    <foreach collection="list" item="item" separator=",">
    (
        <trim suffixOverrides=",">
         {%for column in columns if column['column'] not in ('id', 'create_time', 'update_time', 'is_deleted')%}
         #{ item.{{column['property']}}, jdbcType={{column['jdbc_type']}} },
        {%endfor%}
        </trim>
    )
    </foreach>
  </insert>

  <update id="update">
    update <include refid="TableName" />
    <trim prefix="set " suffixOverrides=",">
    {% for column in columns %}{% if not column['is_primary']  %}<if test="{{ column['property'] }} != null">
        {{ column['column'] }} = #{ po.{{column['property']}}, jdbcType={{column['jdbc_type']}} },
    </if>{% endif %}{% endfor %}
    </trim>
    <where>
        {%for column in columns%}{% if column['is_primary'] %}
                and {{ column['column'] }} = #{ {{column['property']}}, jdbcType={{column['jdbc_type']}} }{% endif %}{%endfor%}
    </where>
  </update>

  <update id="batchUpdate">
    <foreach collection="list" item="item" separator=";">
        update <include refid="TableName" />
        <trim prefix="set " suffixOverrides=",">
        {% for column in columns if column['column'] not in ('id', 'create_time', 'update_time', 'is_deleted')%}<if test="{{ column['property'] }} != null">
            {{ column['column'] }} = #{ {{column['property']}}, jdbcType={{column['jdbc_type']}} },
        </if>{% endfor %}
        </trim>
        <where>
            {%for column in columns%}{% if column['is_primary'] %}
                    and {{ column['column'] }} = #{ {{column['property']}}, jdbcType={{column['jdbc_type']}} }{% endif %}{%endfor%}
        </where>
    </foreach>
  </update>

  <select id="selectById" resultMap="BaseResultMap">
    select
        <include refid="BaseColumns" />
    from <include refid="BaseTableName" />
    <where>
        {%for column in columns%}{% if column['is_primary'] %}
                and {{ column['column'] }} = #{ {{column['property']}}, jdbcType={{column['jdbc_type']}} }{% endif %}{%endfor%}
    </where>
  </select>

  <select id="selectByCondition" resultMap="BaseResultMap">
    select
        <include refid="BaseColumns" />
    from <include refid="BaseTableName" />
    <where>
        <if test = "po != null">
          {% for column in columns if column['column'] not in ('is_deleted')%}
            <if test="po.{{ column['property'] }} != null">
              and {{ column['column'] }} = #{ po.{{column['property']}}, jdbcType={{column['jdbc_type']}} }
            </if>{% endfor %}
        </if>
    </where>
  </select>
  <!-- auto generate code end -->

</mapper>