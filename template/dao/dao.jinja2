package {{ names['dao_package_name'] }};

import {{ names['dao_interface_package_name'] }}.{{ names['dao_interface_name'] }};
import {{ names['entity_package_name'] }}.{{ names['entity_name'] }};
import {{ names['mapper_package_name'] }}.{{ names['mapper_name'] }};
import org.springframework.stereotype.Repository;

import javax.annotation.Resource;
import java.util.List;

@Repository
public class {{ names['dao_name'] }} implements {{ names['dao_interface_name'] }} {

    @Resource(type = {{ names['mapper_name'] }}.class)
    private {{ names['mapper_name'] }} {{ names['mapper_variable_name'] }};

    @Override
    public int insert({{ names['entity_name'] }} {{ names['entity_variable_name'] }}) {
        return this.{{ names['mapper_variable_name'] }}.insertSelective({{ names['entity_variable_name'] }});
    }

    @Override
    public {{ names['entity_name'] }} selectById({{ primary_keys }}) {
        return this.{{ names['mapper_variable_name'] }}.selectById({{ primary_keys_exclude_type }});
    }

    @Override
    public List<{{ names['entity_name'] }}> selectByIds(List<Long> ids) {
        return this.{{ names['mapper_variable_name'] }}.selectByIds(ids);
    }

    @Override
    public int updateById({{ names['entity_name'] }} {{ names['entity_variable_name'] }}) {
        return this.{{ names['mapper_variable_name'] }}.updateById({{ names['entity_variable_name'] }});
    }

    @Override
    public int deleteById(Long id, Long updateBy) {
        return this.{{ names['mapper_variable_name'] }}.deleteById(id, updateBy);
    }

    @Override
    public void batchDeleteByIds(List<Long> ids, Long updateBy) {
        this.{{ names['mapper_variable_name'] }}.batchDeleteByIds(ids, updateBy);
    }
}